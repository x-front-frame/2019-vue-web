{"remainingRequest":"/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/node_modules/cube-ui/src/components/scroll/scroll.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/node_modules/cube-ui/src/components/scroll/scroll.vue","mtime":499162500000},{"path":"/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport BScroll from 'better-scroll';\nimport Loading from \"../loading/loading.vue\";\nimport Bubble from \"../bubble/bubble.vue\";\nimport scrollMixin from \"../../common/mixins/scroll\";\nimport deprecatedMixin from \"../../common/mixins/deprecated\";\nimport { getRect } from \"../../common/helpers/dom\";\nimport { camelize } from \"../../common/lang/string\";\nvar COMPONENT_NAME = 'cube-scroll';\nvar DIRECTION_H = 'horizontal';\nvar DIRECTION_V = 'vertical';\nvar DEFAULT_REFRESH_TXT = 'Refresh success';\nvar DEFAULT_STOP_TIME = 600;\nvar EVENT_CLICK = 'click';\nvar EVENT_PULLING_DOWN = 'pulling-down';\nvar EVENT_PULLING_UP = 'pulling-up';\nvar EVENT_SCROLL = 'scroll';\nvar EVENT_BEFORE_SCROLL_START = 'before-scroll-start';\nvar EVENT_SCROLL_END = 'scroll-end';\nvar NEST_MODE_NONE = 'none';\nvar NEST_MODE_NATIVE = 'native';\nvar SCROLL_EVENTS = [EVENT_SCROLL, EVENT_BEFORE_SCROLL_START, EVENT_SCROLL_END];\nvar DEFAULT_OPTIONS = {\n  observeDOM: true,\n  click: true,\n  probeType: 1,\n  scrollbar: false,\n  pullDownRefresh: false,\n  pullUpLoad: false\n};\nexport default {\n  name: COMPONENT_NAME,\n  mixins: [scrollMixin, deprecatedMixin],\n  provide: function provide() {\n    return {\n      parentScroll: this\n    };\n  },\n  inject: {\n    parentScroll: {\n      default: null\n    }\n  },\n  props: {\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    scrollEvents: {\n      type: Array,\n      default: function _default() {\n        return [];\n      },\n      validator: function validator(arr) {\n        return arr.every(function (item) {\n          return SCROLL_EVENTS.indexOf(item) !== -1;\n        });\n      }\n    },\n    // TODO: plan to remove at 1.10.0\n    listenScroll: {\n      type: Boolean,\n      default: undefined,\n      deprecated: {\n        replacedBy: 'scroll-events'\n      }\n    },\n    listenBeforeScroll: {\n      type: Boolean,\n      default: undefined,\n      deprecated: {\n        replacedBy: 'scroll-events'\n      }\n    },\n    direction: {\n      type: String,\n      default: DIRECTION_V\n    },\n    refreshDelay: {\n      type: Number,\n      default: 20\n    },\n    nestMode: {\n      type: String,\n      default: NEST_MODE_NONE\n    }\n  },\n  data: function data() {\n    return {\n      beforePullDown: true,\n      isPullingDown: false,\n      isPullUpLoad: false,\n      pullUpNoMore: false,\n      bubbleY: 0,\n      pullDownStyle: '',\n      pullDownStop: 40,\n      pullDownHeight: 60,\n      pullUpHeight: 0\n    };\n  },\n  computed: {\n    pullDownRefresh: function pullDownRefresh() {\n      var pullDownRefresh = this.options.pullDownRefresh;\n\n      if (!pullDownRefresh) {\n        return pullDownRefresh;\n      }\n\n      if (pullDownRefresh === true) {\n        pullDownRefresh = {};\n      }\n\n      return Object.assign({\n        stop: this.pullDownStop\n      }, pullDownRefresh);\n    },\n    pullUpLoad: function pullUpLoad() {\n      return this.options.pullUpLoad;\n    },\n    pullUpTxt: function pullUpTxt() {\n      var pullUpLoad = this.pullUpLoad;\n      var txt = pullUpLoad && pullUpLoad.txt;\n      var moreTxt = txt && txt.more || '';\n      var noMoreTxt = txt && txt.noMore || '';\n      return this.pullUpNoMore ? noMoreTxt : moreTxt;\n    },\n    refreshTxt: function refreshTxt() {\n      var pullDownRefresh = this.pullDownRefresh;\n      return pullDownRefresh && pullDownRefresh.txt || DEFAULT_REFRESH_TXT;\n    },\n    finalScrollEvents: function finalScrollEvents() {\n      var finalScrollEvents = this.scrollEvents.slice();\n\n      if (!finalScrollEvents.length) {\n        this.listenScroll && finalScrollEvents.push(EVENT_SCROLL);\n        this.listenBeforeScroll && finalScrollEvents.push(EVENT_BEFORE_SCROLL_START);\n      }\n\n      return finalScrollEvents;\n    },\n    needListenScroll: function needListenScroll() {\n      return this.finalScrollEvents.indexOf(EVENT_SCROLL) !== -1 || this.parentScroll;\n    }\n  },\n  watch: {\n    data: function data() {\n      var _this = this;\n\n      setTimeout(function () {\n        _this.forceUpdate(true);\n      }, this.refreshDelay);\n    },\n    pullDownRefresh: {\n      handler: function handler(newVal, oldVal) {\n        if (newVal) {\n          this.scroll.openPullDown(newVal);\n\n          if (!oldVal) {\n            this._onPullDownRefresh();\n\n            this._pullDownRefreshChangeHandler();\n          }\n        }\n\n        if (!newVal && oldVal) {\n          this.scroll.closePullDown();\n\n          this._offPullDownRefresh();\n\n          this._pullDownRefreshChangeHandler();\n        }\n      },\n      deep: true\n    },\n    pullUpLoad: {\n      handler: function handler(newVal, oldVal) {\n        if (newVal) {\n          this.scroll.openPullUp(newVal);\n\n          if (!oldVal) {\n            this._onPullUpLoad();\n\n            this._pullUpLoadChangeHandler();\n          }\n        }\n\n        if (!newVal && oldVal) {\n          this.scroll.closePullUp();\n\n          this._offPullUpLoad();\n\n          this._pullUpLoadChangeHandler();\n        }\n      },\n      deep: true\n    }\n  },\n  activated: function activated() {\n    /* istanbul ignore next */\n    this.enable();\n  },\n  deactivated: function deactivated() {\n    /* istanbul ignore next */\n    this.disable();\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.$nextTick(function () {\n      _this2.initScroll();\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.destroy();\n  },\n  methods: {\n    initScroll: function initScroll() {\n      if (!this.$refs.wrapper) {\n        return;\n      }\n\n      this._calculateMinHeight();\n\n      var options = Object.assign({}, DEFAULT_OPTIONS, {\n        scrollY: this.direction === DIRECTION_V,\n        scrollX: this.direction === DIRECTION_H,\n        probeType: this.needListenScroll ? 3 : 1\n      }, this.options);\n      this.scroll = new BScroll(this.$refs.wrapper, options);\n      this.parentScroll && this.nestMode !== NEST_MODE_NONE && this._handleNestScroll();\n\n      this._listenScrollEvents();\n\n      if (this.pullDownRefresh) {\n        this._onPullDownRefresh();\n\n        this._pullDownRefreshChangeHandler();\n      }\n\n      if (this.pullUpLoad) {\n        this._onPullUpLoad();\n\n        this._pullUpLoadChangeHandler();\n      }\n    },\n    disable: function disable() {\n      this.scroll && this.scroll.disable();\n    },\n    enable: function enable() {\n      this.scroll && this.scroll.enable();\n    },\n    refresh: function refresh() {\n      this._calculateMinHeight();\n\n      this.scroll && this.scroll.refresh();\n    },\n    destroy: function destroy() {\n      this.scroll && this.scroll.destroy();\n      this.scroll = null;\n    },\n    scrollTo: function scrollTo() {\n      this.scroll && this.scroll.scrollTo.apply(this.scroll, arguments);\n    },\n    scrollToElement: function scrollToElement() {\n      this.scroll && this.scroll.scrollToElement.apply(this.scroll, arguments);\n    },\n    clickItem: function clickItem(item) {\n      this.$emit(EVENT_CLICK, item);\n    },\n    forceUpdate: function forceUpdate() {\n      var _this3 = this;\n\n      var dirty = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var nomore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (this.pullDownRefresh && this.isPullingDown) {\n        this.isPullingDown = false;\n\n        this._reboundPullDown(function () {\n          _this3._afterPullDown(dirty);\n        });\n      } else if (this.pullUpLoad && this.isPullUpLoad) {\n        this.isPullUpLoad = false;\n        this.scroll.finishPullUp();\n        this.pullUpNoMore = !dirty || nomore;\n        dirty && this.refresh();\n      } else {\n        dirty && this.refresh();\n      }\n    },\n    resetPullUpTxt: function resetPullUpTxt() {\n      this.pullUpNoMore = false;\n    },\n    _listenScrollEvents: function _listenScrollEvents() {\n      var _this4 = this;\n\n      this.finalScrollEvents.forEach(function (event) {\n        _this4.scroll.on(camelize(event), function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          _this4.$emit.apply(_this4, [event].concat(args));\n        });\n      });\n    },\n    _handleNestScroll: function _handleNestScroll() {\n      var _this5 = this;\n\n      // waiting scroll initial\n      this.$nextTick(function () {\n        var innerScroll = _this5.scroll;\n        var outerScroll = _this5.parentScroll.scroll;\n        var scrolls = [innerScroll, outerScroll];\n        scrolls.forEach(function (scroll, index, arr) {\n          // scroll ended always enable them\n          scroll.on('touchEnd', function () {\n            outerScroll.enable();\n            innerScroll.enable(); // when inner scroll reaching boundary, we will disable inner scroll, so when 'touchend' event fire,\n            // the inner scroll will not reset initiated within '_end' method in better-scroll.\n            // then lead to inner and outer scrolls together when we touch and move on the outer scroll element,\n            // so here we reset inner scroll's 'initiated' manually.\n\n            innerScroll.initiated = false;\n          });\n          scroll.on('beforeScrollStart', function () {\n            _this5.touchStartMoment = true;\n            var anotherScroll = arr[(index + 1) % 2];\n            anotherScroll.stop();\n            anotherScroll.resetPosition();\n          });\n        });\n        innerScroll.on('scroll', function (pos) {\n          // if scroll event triggered not by touch event, such as by 'scrollTo' method\n          if (!innerScroll.initiated || innerScroll.isInTransition) {\n            return;\n          }\n\n          if (_this5.nestMode === NEST_MODE_NATIVE && !_this5.touchStartMoment) {\n            return;\n          }\n\n          var reachBoundary = _this5._checkReachBoundary(pos);\n\n          if (reachBoundary) {\n            innerScroll.resetPosition();\n            innerScroll.disable(); // Prevent outer scroll have a bouncing step when enabled in 'free' nestMode.\n\n            outerScroll.pointX = innerScroll.pointX;\n            outerScroll.pointY = innerScroll.pointY;\n            outerScroll.enable();\n          } else {\n            outerScroll.disable();\n          }\n\n          _this5.touchStartMoment = false;\n        });\n      });\n    },\n    _checkReachBoundary: function _checkReachBoundary(pos) {\n      var distX = this.scroll.distX;\n      var distY = this.scroll.distY;\n      var reachBoundaryX = distX > 0 ? pos.x >= this.scroll.minScrollX : distX < 0 ? pos.x <= this.scroll.maxScrollX : false;\n      var reachBoundaryY = distY > 0 ? pos.y >= this.scroll.minScrollY : distY < 0 ? pos.y <= this.scroll.maxScrollY : false;\n      var freeScroll = this.scroll.freeScroll;\n      var hasHorizontalScroll = this.scroll.hasHorizontalScroll;\n      var hasVerticalScroll = this.scroll.hasVerticalScroll;\n\n      if (!hasHorizontalScroll && !hasVerticalScroll) {\n        return true;\n      }\n\n      if (freeScroll) {\n        return reachBoundaryX || reachBoundaryY;\n      }\n\n      var reachBoundary;\n\n      if (this.scroll.movingDirectionX) {\n        reachBoundary = reachBoundaryX;\n      } else if (this.scroll.movingDirectionY) {\n        reachBoundary = reachBoundaryY;\n      }\n\n      return reachBoundary;\n    },\n    _calculateMinHeight: function _calculateMinHeight() {\n      var _this$$refs = this.$refs,\n          wrapper = _this$$refs.wrapper,\n          listWrapper = _this$$refs.listWrapper;\n      var pullUpLoad = this.pullUpLoad;\n      var pullDownRefresh = this.pullDownRefresh;\n      var minHeight = 0;\n\n      if (pullDownRefresh || pullUpLoad) {\n        var wrapperHeight = getRect(wrapper).height;\n        minHeight = wrapperHeight + 1;\n\n        if (pullUpLoad && pullUpLoad.visible) {\n          // minHeight = wrapperHeight + 1 - pullUpHeight, then pullUpLoad text is visible\n          // when content's height is not larger than wrapper height\n          minHeight -= this.pullUpHeight;\n        }\n      }\n\n      listWrapper.style.minHeight = \"\".concat(minHeight, \"px\");\n    },\n    _onPullDownRefresh: function _onPullDownRefresh() {\n      this.scroll.on('pullingDown', this._pullDownHandle);\n      this.scroll.on('scroll', this._pullDownScrollHandle);\n    },\n    _offPullDownRefresh: function _offPullDownRefresh() {\n      this.scroll.off('pullingDown', this._pullDownHandle);\n      this.scroll.off('scroll', this._pullDownScrollHandle);\n    },\n    _pullDownRefreshChangeHandler: function _pullDownRefreshChangeHandler() {\n      var _this6 = this;\n\n      this.$nextTick(function () {\n        _this6._getPullDownEleHeight();\n\n        _this6._calculateMinHeight();\n      });\n    },\n    _pullDownHandle: function _pullDownHandle() {\n      if (this.resetPullDownTimer) {\n        clearTimeout(this.resetPullDownTimer);\n      }\n\n      this.beforePullDown = false;\n      this.isPullingDown = true;\n      this.$emit(EVENT_PULLING_DOWN);\n    },\n    _pullDownScrollHandle: function _pullDownScrollHandle(pos) {\n      if (this.beforePullDown) {\n        this.bubbleY = Math.max(0, pos.y - this.pullDownHeight);\n        this.pullDownStyle = \"top:\".concat(Math.min(pos.y - this.pullDownHeight, 0), \"px\");\n      } else {\n        this.bubbleY = 0;\n        this.pullDownStyle = \"top:\".concat(Math.min(pos.y - this.pullDownStop, 0), \"px\");\n      }\n    },\n    _pullUpLoadChangeHandler: function _pullUpLoadChangeHandler() {\n      var _this7 = this;\n\n      this.$nextTick(function () {\n        _this7._getPullUpEleHeight();\n\n        _this7._calculateMinHeight();\n      });\n    },\n    _onPullUpLoad: function _onPullUpLoad() {\n      this.scroll.on('pullingUp', this._pullUpHandle);\n    },\n    _offPullUpLoad: function _offPullUpLoad() {\n      this.scroll.off('pullingUp', this._pullUpHandle);\n    },\n    _pullUpHandle: function _pullUpHandle() {\n      this.isPullUpLoad = true;\n      this.$emit(EVENT_PULLING_UP);\n    },\n    _reboundPullDown: function _reboundPullDown(next) {\n      var _this8 = this;\n\n      var _this$pullDownRefresh = this.pullDownRefresh.stopTime,\n          stopTime = _this$pullDownRefresh === void 0 ? DEFAULT_STOP_TIME : _this$pullDownRefresh;\n      setTimeout(function () {\n        _this8.scroll.finishPullDown();\n\n        next();\n      }, stopTime);\n    },\n    _afterPullDown: function _afterPullDown(dirty) {\n      var _this9 = this;\n\n      this.resetPullDownTimer = setTimeout(function () {\n        _this9.pullDownStyle = \"top: -\".concat(_this9.pullDownHeight, \"px\");\n        _this9.beforePullDown = true;\n        dirty && _this9.refresh();\n      }, this.scroll.options.bounceTime);\n    },\n    _getPullDownEleHeight: function _getPullDownEleHeight() {\n      var _this10 = this;\n\n      var pulldown = this.$refs.pulldown;\n\n      if (!pulldown) {\n        return;\n      }\n\n      pulldown = pulldown.firstChild;\n      this.pullDownHeight = getRect(pulldown).height;\n      this.beforePullDown = false;\n      this.isPullingDown = true;\n      this.$nextTick(function () {\n        _this10.pullDownStop = getRect(pulldown).height;\n        _this10.beforePullDown = true;\n        _this10.isPullingDown = false;\n      });\n    },\n    _getPullUpEleHeight: function _getPullUpEleHeight() {\n      var listWrapper = this.$refs.listWrapper;\n      var pullup = listWrapper.nextElementSibling;\n\n      if (!pullup) {\n        this.pullUpHeight = 0;\n        return;\n      }\n\n      this.pullUpHeight = getRect(pullup).height;\n    }\n  },\n  components: {\n    Loading: Loading,\n    Bubble: Bubble\n  }\n};",{"version":3,"sources":["scroll.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div ref=\"wrapper\" class=\"cube-scroll-wrapper\">\n    <div class=\"cube-scroll-content\">\n      <div ref=\"listWrapper\" class=\"cube-scroll-list-wrapper\">\n        <slot>\n          <ul class=\"cube-scroll-list\">\n            <li\n              class=\"cube-scroll-item border-bottom-1px\"\n              v-for=\"(item, index) in data\"\n              :key=\"index\"\n              @click=\"clickItem(item)\">{{item}}</li>\n          </ul>\n        </slot>\n      </div>\n      <slot name=\"pullup\" :pullUpLoad=\"pullUpLoad\" :isPullUpLoad=\"isPullUpLoad\">\n        <div class=\"cube-pullup-wrapper\" v-if=\"pullUpLoad\">\n          <div class=\"before-trigger\" v-if=\"!isPullUpLoad\">\n            <span>{{ pullUpTxt }}</span>\n          </div>\n          <div class=\"after-trigger\" v-else>\n            <loading></loading>\n          </div>\n        </div>\n      </slot>\n    </div>\n    <div v-if=\"pullDownRefresh\" class=\"cube-pulldown\" ref=\"pulldown\">\n      <slot\n        name=\"pulldown\"\n        :pullDownRefresh=\"pullDownRefresh\"\n        :pullDownStyle=\"pullDownStyle\"\n        :beforePullDown=\"beforePullDown\"\n        :isPullingDown=\"isPullingDown\"\n        :bubbleY=\"bubbleY\">\n        <div class=\"cube-pulldown-wrapper\" :style=\"pullDownStyle\">\n          <div class=\"before-trigger\" v-show=\"beforePullDown\">\n            <bubble :y=\"bubbleY\" class=\"bubble\"></bubble>\n          </div>\n          <div class=\"after-trigger\" v-show=\"!beforePullDown\">\n            <div v-show=\"isPullingDown\" class=\"loading\">\n              <loading></loading>\n            </div>\n            <div v-show=\"!isPullingDown\" class=\"cube-pulldown-loaded\"><span>{{ refreshTxt }}</span></div>\n          </div>\n        </div>\n      </slot>\n    </div>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import BScroll from 'better-scroll'\n  import Loading from '../loading/loading.vue'\n  import Bubble from '../bubble/bubble.vue'\n  import scrollMixin from '../../common/mixins/scroll'\n  import deprecatedMixin from '../../common/mixins/deprecated'\n  import { getRect } from '../../common/helpers/dom'\n  import { camelize } from '../../common/lang/string'\n\n  const COMPONENT_NAME = 'cube-scroll'\n  const DIRECTION_H = 'horizontal'\n  const DIRECTION_V = 'vertical'\n  const DEFAULT_REFRESH_TXT = 'Refresh success'\n  const DEFAULT_STOP_TIME = 600\n\n  const EVENT_CLICK = 'click'\n  const EVENT_PULLING_DOWN = 'pulling-down'\n  const EVENT_PULLING_UP = 'pulling-up'\n\n  const EVENT_SCROLL = 'scroll'\n  const EVENT_BEFORE_SCROLL_START = 'before-scroll-start'\n  const EVENT_SCROLL_END = 'scroll-end'\n\n  const NEST_MODE_NONE = 'none'\n  const NEST_MODE_NATIVE = 'native'\n\n  const SCROLL_EVENTS = [EVENT_SCROLL, EVENT_BEFORE_SCROLL_START, EVENT_SCROLL_END]\n\n  const DEFAULT_OPTIONS = {\n    observeDOM: true,\n    click: true,\n    probeType: 1,\n    scrollbar: false,\n    pullDownRefresh: false,\n    pullUpLoad: false\n  }\n\n  export default {\n    name: COMPONENT_NAME,\n    mixins: [scrollMixin, deprecatedMixin],\n    provide() {\n      return {\n        parentScroll: this\n      }\n    },\n    inject: {\n      parentScroll: {\n        default: null\n      }\n    },\n    props: {\n      data: {\n        type: Array,\n        default() {\n          return []\n        }\n      },\n      scrollEvents: {\n        type: Array,\n        default() {\n          return []\n        },\n        validator(arr) {\n          return arr.every((item) => {\n            return SCROLL_EVENTS.indexOf(item) !== -1\n          })\n        }\n      },\n      // TODO: plan to remove at 1.10.0\n      listenScroll: {\n        type: Boolean,\n        default: undefined,\n        deprecated: {\n          replacedBy: 'scroll-events'\n        }\n      },\n      listenBeforeScroll: {\n        type: Boolean,\n        default: undefined,\n        deprecated: {\n          replacedBy: 'scroll-events'\n        }\n      },\n      direction: {\n        type: String,\n        default: DIRECTION_V\n      },\n      refreshDelay: {\n        type: Number,\n        default: 20\n      },\n      nestMode: {\n        type: String,\n        default: NEST_MODE_NONE\n      }\n    },\n    data() {\n      return {\n        beforePullDown: true,\n        isPullingDown: false,\n        isPullUpLoad: false,\n        pullUpNoMore: false,\n        bubbleY: 0,\n        pullDownStyle: '',\n        pullDownStop: 40,\n        pullDownHeight: 60,\n        pullUpHeight: 0\n      }\n    },\n    computed: {\n      pullDownRefresh() {\n        let pullDownRefresh = this.options.pullDownRefresh\n        if (!pullDownRefresh) {\n          return pullDownRefresh\n        }\n        if (pullDownRefresh === true) {\n          pullDownRefresh = {}\n        }\n        return Object.assign({stop: this.pullDownStop}, pullDownRefresh)\n      },\n      pullUpLoad() {\n        return this.options.pullUpLoad\n      },\n      pullUpTxt() {\n        const pullUpLoad = this.pullUpLoad\n        const txt = pullUpLoad && pullUpLoad.txt\n        const moreTxt = (txt && txt.more) || ''\n        const noMoreTxt = (txt && txt.noMore) || ''\n\n        return this.pullUpNoMore ? noMoreTxt : moreTxt\n      },\n      refreshTxt() {\n        const pullDownRefresh = this.pullDownRefresh\n        return (pullDownRefresh && pullDownRefresh.txt) || DEFAULT_REFRESH_TXT\n      },\n      finalScrollEvents() {\n        const finalScrollEvents = this.scrollEvents.slice()\n\n        if (!finalScrollEvents.length) {\n          this.listenScroll && finalScrollEvents.push(EVENT_SCROLL)\n          this.listenBeforeScroll && finalScrollEvents.push(EVENT_BEFORE_SCROLL_START)\n        }\n        return finalScrollEvents\n      },\n      needListenScroll() {\n        return this.finalScrollEvents.indexOf(EVENT_SCROLL) !== -1 || this.parentScroll\n      }\n    },\n    watch: {\n      data() {\n        setTimeout(() => {\n          this.forceUpdate(true)\n        }, this.refreshDelay)\n      },\n      pullDownRefresh: {\n        handler(newVal, oldVal) {\n          if (newVal) {\n            this.scroll.openPullDown(newVal)\n            if (!oldVal) {\n              this._onPullDownRefresh()\n              this._pullDownRefreshChangeHandler()\n            }\n          }\n\n          if (!newVal && oldVal) {\n            this.scroll.closePullDown()\n            this._offPullDownRefresh()\n            this._pullDownRefreshChangeHandler()\n          }\n        },\n        deep: true\n      },\n      pullUpLoad: {\n        handler(newVal, oldVal) {\n          if (newVal) {\n            this.scroll.openPullUp(newVal)\n            if (!oldVal) {\n              this._onPullUpLoad()\n              this._pullUpLoadChangeHandler()\n            }\n          }\n\n          if (!newVal && oldVal) {\n            this.scroll.closePullUp()\n            this._offPullUpLoad()\n            this._pullUpLoadChangeHandler()\n          }\n        },\n        deep: true\n      }\n    },\n    activated() {\n      /* istanbul ignore next */\n      this.enable()\n    },\n    deactivated() {\n      /* istanbul ignore next */\n      this.disable()\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initScroll()\n      })\n    },\n    beforeDestroy() {\n      this.destroy()\n    },\n    methods: {\n      initScroll() {\n        if (!this.$refs.wrapper) {\n          return\n        }\n        this._calculateMinHeight()\n\n        let options = Object.assign({}, DEFAULT_OPTIONS, {\n          scrollY: this.direction === DIRECTION_V,\n          scrollX: this.direction === DIRECTION_H,\n          probeType: this.needListenScroll ? 3 : 1\n        }, this.options)\n\n        this.scroll = new BScroll(this.$refs.wrapper, options)\n\n        this.parentScroll && this.nestMode !== NEST_MODE_NONE && this._handleNestScroll()\n\n        this._listenScrollEvents()\n\n        if (this.pullDownRefresh) {\n          this._onPullDownRefresh()\n          this._pullDownRefreshChangeHandler()\n        }\n\n        if (this.pullUpLoad) {\n          this._onPullUpLoad()\n          this._pullUpLoadChangeHandler()\n        }\n      },\n      disable() {\n        this.scroll && this.scroll.disable()\n      },\n      enable() {\n        this.scroll && this.scroll.enable()\n      },\n      refresh() {\n        this._calculateMinHeight()\n        this.scroll && this.scroll.refresh()\n      },\n      destroy() {\n        this.scroll && this.scroll.destroy()\n        this.scroll = null\n      },\n      scrollTo() {\n        this.scroll && this.scroll.scrollTo.apply(this.scroll, arguments)\n      },\n      scrollToElement() {\n        this.scroll && this.scroll.scrollToElement.apply(this.scroll, arguments)\n      },\n      clickItem(item) {\n        this.$emit(EVENT_CLICK, item)\n      },\n      forceUpdate(dirty = false, nomore = false) {\n        if (this.pullDownRefresh && this.isPullingDown) {\n          this.isPullingDown = false\n          this._reboundPullDown(() => {\n            this._afterPullDown(dirty)\n          })\n        } else if (this.pullUpLoad && this.isPullUpLoad) {\n          this.isPullUpLoad = false\n          this.scroll.finishPullUp()\n          this.pullUpNoMore = !dirty || nomore\n          dirty && this.refresh()\n        } else {\n          dirty && this.refresh()\n        }\n      },\n      resetPullUpTxt() {\n        this.pullUpNoMore = false\n      },\n      _listenScrollEvents() {\n        this.finalScrollEvents.forEach((event) => {\n          this.scroll.on(camelize(event), (...args) => {\n            this.$emit(event, ...args)\n          })\n        })\n      },\n      _handleNestScroll() {\n        // waiting scroll initial\n        this.$nextTick(() => {\n          const innerScroll = this.scroll\n          const outerScroll = this.parentScroll.scroll\n          const scrolls = [innerScroll, outerScroll]\n          scrolls.forEach((scroll, index, arr) => {\n            // scroll ended always enable them\n            scroll.on('touchEnd', () => {\n              outerScroll.enable()\n              innerScroll.enable()\n              // when inner scroll reaching boundary, we will disable inner scroll, so when 'touchend' event fire,\n              // the inner scroll will not reset initiated within '_end' method in better-scroll.\n              // then lead to inner and outer scrolls together when we touch and move on the outer scroll element,\n              // so here we reset inner scroll's 'initiated' manually.\n              innerScroll.initiated = false\n            })\n\n            scroll.on('beforeScrollStart', () => {\n              this.touchStartMoment = true\n              const anotherScroll = arr[(index + 1) % 2]\n              anotherScroll.stop()\n              anotherScroll.resetPosition()\n            })\n          })\n\n          innerScroll.on('scroll', (pos) => {\n            // if scroll event triggered not by touch event, such as by 'scrollTo' method\n            if (!innerScroll.initiated || innerScroll.isInTransition) {\n              return\n            }\n\n            if (this.nestMode === NEST_MODE_NATIVE && !this.touchStartMoment) {\n              return\n            }\n\n            const reachBoundary = this._checkReachBoundary(pos)\n            if (reachBoundary) {\n              innerScroll.resetPosition()\n              innerScroll.disable()\n              // Prevent outer scroll have a bouncing step when enabled in 'free' nestMode.\n              outerScroll.pointX = innerScroll.pointX\n              outerScroll.pointY = innerScroll.pointY\n              outerScroll.enable()\n            } else {\n              outerScroll.disable()\n            }\n            this.touchStartMoment = false\n          })\n        })\n      },\n      _checkReachBoundary(pos) {\n        const distX = this.scroll.distX\n        const distY = this.scroll.distY\n        const reachBoundaryX = distX > 0 ? pos.x >= this.scroll.minScrollX : distX < 0 ? pos.x <= this.scroll.maxScrollX : false\n        const reachBoundaryY = distY > 0 ? pos.y >= this.scroll.minScrollY : distY < 0 ? pos.y <= this.scroll.maxScrollY : false\n        const freeScroll = this.scroll.freeScroll\n        const hasHorizontalScroll = this.scroll.hasHorizontalScroll\n        const hasVerticalScroll = this.scroll.hasVerticalScroll\n\n        if (!hasHorizontalScroll && !hasVerticalScroll) {\n          return true\n        }\n\n        if (freeScroll) {\n          return reachBoundaryX || reachBoundaryY\n        }\n\n        let reachBoundary\n        if (this.scroll.movingDirectionX) {\n          reachBoundary = reachBoundaryX\n        } else if (this.scroll.movingDirectionY) {\n          reachBoundary = reachBoundaryY\n        }\n        return reachBoundary\n      },\n      _calculateMinHeight() {\n        const { wrapper, listWrapper } = this.$refs\n        const pullUpLoad = this.pullUpLoad\n        const pullDownRefresh = this.pullDownRefresh\n        let minHeight = 0\n\n        if (pullDownRefresh || pullUpLoad) {\n          const wrapperHeight = getRect(wrapper).height\n          minHeight = wrapperHeight + 1\n          if (pullUpLoad && pullUpLoad.visible) {\n            // minHeight = wrapperHeight + 1 - pullUpHeight, then pullUpLoad text is visible\n            // when content's height is not larger than wrapper height\n            minHeight -= this.pullUpHeight\n          }\n        }\n\n        listWrapper.style.minHeight = `${minHeight}px`\n      },\n      _onPullDownRefresh() {\n        this.scroll.on('pullingDown', this._pullDownHandle)\n        this.scroll.on('scroll', this._pullDownScrollHandle)\n      },\n      _offPullDownRefresh() {\n        this.scroll.off('pullingDown', this._pullDownHandle)\n        this.scroll.off('scroll', this._pullDownScrollHandle)\n      },\n      _pullDownRefreshChangeHandler() {\n        this.$nextTick(() => {\n          this._getPullDownEleHeight()\n          this._calculateMinHeight()\n        })\n      },\n      _pullDownHandle() {\n        if (this.resetPullDownTimer) {\n          clearTimeout(this.resetPullDownTimer)\n        }\n        this.beforePullDown = false\n        this.isPullingDown = true\n        this.$emit(EVENT_PULLING_DOWN)\n      },\n      _pullDownScrollHandle(pos) {\n        if (this.beforePullDown) {\n          this.bubbleY = Math.max(0, pos.y - this.pullDownHeight)\n          this.pullDownStyle = `top:${Math.min(pos.y - this.pullDownHeight, 0)}px`\n        } else {\n          this.bubbleY = 0\n          this.pullDownStyle = `top:${Math.min(pos.y - this.pullDownStop, 0)}px`\n        }\n      },\n      _pullUpLoadChangeHandler() {\n        this.$nextTick(() => {\n          this._getPullUpEleHeight()\n          this._calculateMinHeight()\n        })\n      },\n      _onPullUpLoad() {\n        this.scroll.on('pullingUp', this._pullUpHandle)\n      },\n      _offPullUpLoad() {\n        this.scroll.off('pullingUp', this._pullUpHandle)\n      },\n      _pullUpHandle() {\n        this.isPullUpLoad = true\n        this.$emit(EVENT_PULLING_UP)\n      },\n      _reboundPullDown(next) {\n        const {stopTime = DEFAULT_STOP_TIME} = this.pullDownRefresh\n        setTimeout(() => {\n          this.scroll.finishPullDown()\n          next()\n        }, stopTime)\n      },\n      _afterPullDown(dirty) {\n        this.resetPullDownTimer = setTimeout(() => {\n          this.pullDownStyle = `top: -${this.pullDownHeight}px`\n          this.beforePullDown = true\n          dirty && this.refresh()\n        }, this.scroll.options.bounceTime)\n      },\n      _getPullDownEleHeight() {\n        let pulldown = this.$refs.pulldown\n        if (!pulldown) {\n          return\n        }\n        pulldown = pulldown.firstChild\n        this.pullDownHeight = getRect(pulldown).height\n\n        this.beforePullDown = false\n        this.isPullingDown = true\n        this.$nextTick(() => {\n          this.pullDownStop = getRect(pulldown).height\n\n          this.beforePullDown = true\n          this.isPullingDown = false\n        })\n      },\n      _getPullUpEleHeight() {\n        const listWrapper = this.$refs.listWrapper\n        const pullup = listWrapper.nextElementSibling\n        if (!pullup) {\n          this.pullUpHeight = 0\n          return\n        }\n        this.pullUpHeight = getRect(pullup).height\n      }\n    },\n    components: {\n      Loading,\n      Bubble\n    }\n  }\n</script>\n\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n  @require \"../../common/stylus/variable.styl\"\n\n  .cube-scroll-wrapper\n    position: relative\n    height: 100%\n    overflow: hidden\n\n  .cube-scroll-list-wrapper\n    overflow: hidden\n\n  .cube-pulldown-wrapper\n    position: absolute\n    width: 100%\n    left: 0\n    display: flex\n    justify-content: center\n    align-items: center\n    transition: all\n    .before-trigger\n      height: 54px\n      line-height: 0\n      padding-top: 6px\n    .after-trigger\n      .loading\n        padding: 8px 0\n      .cube-pulldown-loaded\n        padding: 12px 0\n\n  .cube-pullup-wrapper\n    width: 100%\n    display: flex\n    justify-content: center\n    align-items: center\n    .before-trigger\n      padding: 22px 0\n      min-height: 1em\n    .after-trigger\n      padding: 19px 0\n\n  .cube-scroll-content\n    position: relative\n    z-index: 1\n\n  .cube-scroll-item\n    height: 60px\n    line-height: 60px\n    font-size: $fontsize-large-x\n    padding-left: 20px\n</style>\n"],"sourceRoot":"node_modules/cube-ui/src/components/scroll"}]}