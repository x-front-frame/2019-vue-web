{"remainingRequest":"/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/src/App.vue","mtime":1581899048113},{"path":"/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as util from \"./assets/util.js\";\nimport instance from \"./api\";\nimport routers from \"./router/routers\";\n/**\n * to 如果在这个列表中，始终采用从左到右的滑动效果，首页比较适合用这种方式\n */\n\nvar ALWAYS_BACK_PAGE = [];\n/**\n * to 如果在这个列表中，始终采用从右到左的滑动效果\n */\n\nvar ALWAYS_FORWARD_PAGE = [];\n/**\n * 历史记录，记录访问过的页面的 fullPath\n */\n\nvar HISTORY_STACK = [];\nexport default {\n  data: function data() {\n    return {\n      transitionName: ''\n    };\n  },\n  watch: {\n    '$route': function $route(to, from) {\n      var tn = this.isForward(to, from);\n\n      if (tn.split) {\n        this.transitionName = tn;\n      } else {\n        this.transitionName = tn ? 'slide-left' : 'slide-right';\n      }\n    }\n  },\n  methods: {\n    isForward: function isForward(to, from) {\n      var res = true;\n\n      if (HISTORY_STACK.length) {\n        res = this.isForwardByArray(to, from);\n      } else {\n        res = \"home\";\n      }\n\n      if (res) {\n        // 将 to.fullPath 加到栈顶\n        HISTORY_STACK.push(to.fullPath);\n      }\n\n      util.storage(\"HISTORY_ARRAY_STACK_LOCAL_KEY\", HISTORY_STACK); // to 如果在这个列表中，始终认为是后退\n\n      if (to.name && ALWAYS_BACK_PAGE.indexOf(to.name) !== -1) {\n        res = false;\n      } // 如果在这个列表中，始终认为是前进\n      else if (to.name && ALWAYS_FORWARD_PAGE.indexOf(to.name) !== -1) {\n          res = true;\n        }\n\n      return res;\n    },\n    isForwardByArray: function isForwardByArray(to, from) {\n      // 根据 fullPath 判断当前页面是否访问过，如果访问过，则属于返回\n      var index = HISTORY_STACK.indexOf(to.fullPath);\n\n      if (index !== -1) {\n        HISTORY_STACK.length = index + 1;\n        return false;\n      }\n\n      return true;\n    },\n    initUser: function initUser(callback) {\n      this.$root.user = util.storage(\"user\"); //设置请求头统一携带token\n\n      instance.defaults.headers.common[\"Authorization\"] = this.$root.user.access_token; //注入路由\n\n      this.$router.addRoutes(routers.concat([{\n        path: '*',\n        redirect: '/404'\n      }])); //执行回调\n\n      typeof callback === \"function\" && callback();\n    }\n  },\n  created: function created() {\n    if (util.storage(\"user\")) {\n      this.initUser();\n    } else {\n      this.$router.replace('/login');\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;AAUA,OAAA,KAAA,IAAA;AACA,OAAA,QAAA;AACA,OAAA,OAAA;AAEA;;;;AAGA,IAAA,gBAAA,GAAA,EAAA;AAEA;;;;AAGA,IAAA,mBAAA,GAAA,EAAA;AAEA;;;;AAGA,IAAA,aAAA,GAAA,EAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,cAAA,EAAA;AADA,KAAA;AAGA,GALA;AAMA,EAAA,KAAA,EAAA;AACA,YADA,kBACA,EADA,EACA,IADA,EACA;AACA,UAAA,EAAA,GAAA,KAAA,SAAA,CAAA,EAAA,EAAA,IAAA,CAAA;;AACA,UAAA,EAAA,CAAA,KAAA,EAAA;AACA,aAAA,cAAA,GAAA,EAAA;AACA,OAFA,MAEA;AACA,aAAA,cAAA,GAAA,EAAA,GAAA,YAAA,GAAA,aAAA;AACA;AACA;AARA,GANA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,SAAA,EAAA,mBAAA,EAAA,EAAA,IAAA,EAAA;AACA,UAAA,GAAA,GAAA,IAAA;;AACA,UAAA,aAAA,CAAA,MAAA,EAAA;AACA,QAAA,GAAA,GAAA,KAAA,gBAAA,CAAA,EAAA,EAAA,IAAA,CAAA;AACA,OAFA,MAEA;AACA,QAAA,GAAA,GAAA,MAAA;AACA;;AACA,UAAA,GAAA,EAAA;AACA;AACA,QAAA,aAAA,CAAA,IAAA,CAAA,EAAA,CAAA,QAAA;AACA;;AAEA,MAAA,IAAA,CAAA,OAAA,CAAA,+BAAA,EAAA,aAAA,EAZA,CAcA;;AACA,UAAA,EAAA,CAAA,IAAA,IAAA,gBAAA,CAAA,OAAA,CAAA,EAAA,CAAA,IAAA,MAAA,CAAA,CAAA,EAAA;AACA,QAAA,GAAA,GAAA,KAAA;AACA,OAFA,CAGA;AAHA,WAIA,IAAA,EAAA,CAAA,IAAA,IAAA,mBAAA,CAAA,OAAA,CAAA,EAAA,CAAA,IAAA,MAAA,CAAA,CAAA,EAAA;AACA,UAAA,GAAA,GAAA,IAAA;AACA;;AACA,aAAA,GAAA;AACA,KAxBA;AAyBA,IAAA,gBAAA,EAAA,0BAAA,EAAA,EAAA,IAAA,EAAA;AACA;AAEA,UAAA,KAAA,GAAA,aAAA,CAAA,OAAA,CAAA,EAAA,CAAA,QAAA,CAAA;;AACA,UAAA,KAAA,KAAA,CAAA,CAAA,EAAA;AACA,QAAA,aAAA,CAAA,MAAA,GAAA,KAAA,GAAA,CAAA;AACA,eAAA,KAAA;AACA;;AACA,aAAA,IAAA;AAEA,KAnCA;AAoCA,IAAA,QAAA,EAAA,kBAAA,QAAA,EAAA;AACA,WAAA,KAAA,CAAA,IAAA,GAAA,IAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CADA,CAEA;;AACA,MAAA,QAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA,CACA,eADA,IAEA,KAAA,KAAA,CAAA,IAAA,CAAA,YAFA,CAHA,CAMA;;AACA,WAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;AACA,QAAA,IAAA,EAAA,GADA;AAEA,QAAA,QAAA,EAAA;AAFA,OAAA,CAAA,CAAA,EAPA,CAWA;;AACA,aAAA,QAAA,KAAA,UAAA,IAAA,QAAA,EAAA;AACA;AAjDA,GAhBA;AAmEA,EAAA,OAAA,EAAA,mBAAA;AACA,QAAA,IAAA,CAAA,OAAA,CAAA,MAAA,CAAA,EAAA;AACA,WAAA,QAAA;AACA,KAFA,MAEA;AACA,WAAA,OAAA,CAAA,OAAA,CAAA,QAAA;AACA;AACA;AAzEA,CAAA","sourcesContent":["<template>\n  <div id=\"app\">\n    <transition :name=\"transitionName\">\n      <keep-alive>\n      <router-view class=\"child-view\"></router-view>\n      </keep-alive>\n    </transition>\n  </div>\n</template>\n<script>\nimport * as util from \"./assets/util.js\";\nimport instance from \"./api\";\nimport routers from './router/routers';\n\n/**\n * to 如果在这个列表中，始终采用从左到右的滑动效果，首页比较适合用这种方式\n */\nconst ALWAYS_BACK_PAGE = [];\n\n/**\n * to 如果在这个列表中，始终采用从右到左的滑动效果\n */\nconst ALWAYS_FORWARD_PAGE = [];\n\n/**\n * 历史记录，记录访问过的页面的 fullPath\n */\nlet HISTORY_STACK = [];\n\nexport default {\n  data() {\n    return {\n      transitionName: ''\n    };\n  },\n  watch: {\n    '$route' (to, from) {\n      let tn = this.isForward(to, from);\n      if(tn.split){\n        this.transitionName = tn\n      }else{\n        this.transitionName = tn ? 'slide-left' : 'slide-right'\n      }\n    }\n  },\n  methods: {\n    isForward: function(to, from){\n      let res = true;\n      if(HISTORY_STACK.length){\n        res = this.isForwardByArray(to, from);\n      }else{\n        res = \"home\";\n      }\n      if (res) {\n          // 将 to.fullPath 加到栈顶\n          HISTORY_STACK.push(to.fullPath);\n      }\n\n      util.storage(\"HISTORY_ARRAY_STACK_LOCAL_KEY\", HISTORY_STACK);\n\n      // to 如果在这个列表中，始终认为是后退\n      if (to.name && ALWAYS_BACK_PAGE.indexOf(to.name) !== -1) {\n          res = false;\n      }\n      // 如果在这个列表中，始终认为是前进\n      else if (to.name && ALWAYS_FORWARD_PAGE.indexOf(to.name) !== -1) {\n          res = true;\n      }\n      return res;\n    },\n    isForwardByArray: function(to, from) {\n        // 根据 fullPath 判断当前页面是否访问过，如果访问过，则属于返回\n\n        let index = HISTORY_STACK.indexOf(to.fullPath);\n        if (index !== -1) {\n            HISTORY_STACK.length = index + 1;\n            return false;\n        }\n        return true;\n\n    },\n    initUser: function(callback) {\n      this.$root.user = util.storage(\"user\");\n      //设置请求头统一携带token\n      instance.defaults.headers.common[\n        \"Authorization\"\n      ] = this.$root.user.access_token;\n      //注入路由\n      this.$router.addRoutes(routers.concat([{\n        path: '*',\n        redirect: '/404'\n      }]));\n      //执行回调\n      typeof callback === \"function\" && callback();\n    }\n  },\n  created: function() {\n    if(util.storage(\"user\")){\n      this.initUser()\n    }else{\n      this.$router.replace('/login')\n    }\n  }\n};\n</script>\n<style>\n@import \"assets/common.css\";\n</style>\n"],"sourceRoot":"src"}]}