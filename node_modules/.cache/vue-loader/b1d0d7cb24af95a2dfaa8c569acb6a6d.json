{"remainingRequest":"/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/src/App.vue","mtime":1581899048113},{"path":"/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lixuerui/Documents/PJ/free/Vue-Scaffold-Mobile/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"assets/common.css\";\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <transition :name=\"transitionName\">\n      <keep-alive>\n      <router-view class=\"child-view\"></router-view>\n      </keep-alive>\n    </transition>\n  </div>\n</template>\n<script>\nimport * as util from \"./assets/util.js\";\nimport instance from \"./api\";\nimport routers from './router/routers';\n\n/**\n * to 如果在这个列表中，始终采用从左到右的滑动效果，首页比较适合用这种方式\n */\nconst ALWAYS_BACK_PAGE = [];\n\n/**\n * to 如果在这个列表中，始终采用从右到左的滑动效果\n */\nconst ALWAYS_FORWARD_PAGE = [];\n\n/**\n * 历史记录，记录访问过的页面的 fullPath\n */\nlet HISTORY_STACK = [];\n\nexport default {\n  data() {\n    return {\n      transitionName: ''\n    };\n  },\n  watch: {\n    '$route' (to, from) {\n      let tn = this.isForward(to, from);\n      if(tn.split){\n        this.transitionName = tn\n      }else{\n        this.transitionName = tn ? 'slide-left' : 'slide-right'\n      }\n    }\n  },\n  methods: {\n    isForward: function(to, from){\n      let res = true;\n      if(HISTORY_STACK.length){\n        res = this.isForwardByArray(to, from);\n      }else{\n        res = \"home\";\n      }\n      if (res) {\n          // 将 to.fullPath 加到栈顶\n          HISTORY_STACK.push(to.fullPath);\n      }\n\n      util.storage(\"HISTORY_ARRAY_STACK_LOCAL_KEY\", HISTORY_STACK);\n\n      // to 如果在这个列表中，始终认为是后退\n      if (to.name && ALWAYS_BACK_PAGE.indexOf(to.name) !== -1) {\n          res = false;\n      }\n      // 如果在这个列表中，始终认为是前进\n      else if (to.name && ALWAYS_FORWARD_PAGE.indexOf(to.name) !== -1) {\n          res = true;\n      }\n      return res;\n    },\n    isForwardByArray: function(to, from) {\n        // 根据 fullPath 判断当前页面是否访问过，如果访问过，则属于返回\n\n        let index = HISTORY_STACK.indexOf(to.fullPath);\n        if (index !== -1) {\n            HISTORY_STACK.length = index + 1;\n            return false;\n        }\n        return true;\n\n    },\n    initUser: function(callback) {\n      this.$root.user = util.storage(\"user\");\n      //设置请求头统一携带token\n      instance.defaults.headers.common[\n        \"Authorization\"\n      ] = this.$root.user.access_token;\n      //注入路由\n      this.$router.addRoutes(routers.concat([{\n        path: '*',\n        redirect: '/404'\n      }]));\n      //执行回调\n      typeof callback === \"function\" && callback();\n    }\n  },\n  created: function() {\n    if(util.storage(\"user\")){\n      this.initUser()\n    }else{\n      this.$router.replace('/login')\n    }\n  }\n};\n</script>\n<style>\n@import \"assets/common.css\";\n</style>\n"]}]}